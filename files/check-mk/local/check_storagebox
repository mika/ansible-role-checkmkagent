#!/bin/bash
# HEADER: managed by ansible, do NOT edit manually!
#
# Purpose: check disk usage of a Hetzner Storage Box
# API docs: https://docs.hetzner.cloud/reference/hetzner#storage-boxes

set -e -E -u -o pipefail

export TZ=UTC
export LANG=C

PN=$(basename "$0")

# defaults
TIMEOUT=2  # timeout in seconds
USAGE_WARN=80
USAGE_CRIT=90

if ! command -v jq &>/dev/null ; then
  echo "2 ${PN} - Error: jq binary not present."
  exit 1
fi

if [ -r "${MK_CONFDIR:-/etc/check_mk}/${PN}" ] ; then
  # shellcheck source=/dev/null
  . "${MK_CONFDIR:-/etc/check_mk}/${PN}"
else
  echo "2 ${PN} - Error: configuration file ${MK_CONFDIR:-/etc/check_mk}/${PN} does not exist or could not be read"
  exit 1
fi

if [ -z "${API_TOKEN}" ] ; then
  echo "2 ${PN} - Error: forgot to configure API_TOKEN... in '${MK_CONFDIR:-/etc/check_mk}/${PN}'?"
  exit 1
fi

# if STORAGEBOX is unconfigured, then derive storagebox ID from script name
if [ -z "${STORAGEBOX:-}" ] ; then
  STORAGEBOX="${PN#check_storagebox_}" ; STORAGEBOX="${STORAGEBOX%%_*}"
fi

if [ -z "${STORAGEBOX:-}" ] ; then
  echo "2 ${PN} - Error: could not identify storagebox ID (either use check_storagebox_ID or set STORAGEBOX=... in ${MK_CONFDIR:-/etc/check_mk}/${PN}"
  exit 1
fi

OUTPUT="$(mktemp -t check_storagebox-XXXXXXXXXX)"

parse_output() {
  if [[ "$(jq '.error' < "${OUTPUT}")" != "null" ]] ; then
    result="1 ${PN} - Error fetching storagebox data via API :-/"
    return 0
  fi

  disk_quota=$(jq ".storage_boxes[] | select(.id==${STORAGEBOX}) | .storage_box_type.size" "${OUTPUT}")
  disk_usage=$(jq ".storage_boxes[] | select(.id==${STORAGEBOX}) | .stats.size" "${OUTPUT}")

  disk_usage_warn=$(( disk_quota * USAGE_WARN / 100))
  disk_usage_crit=$(( disk_quota * USAGE_CRIT / 100))

  # Local checks syntax:
  # https://docs.checkmk.com/latest/en/localchecks.html#dynamic_state
  #
  # performance metrics format:
  # valuename=value;warn_upper;crit_upper
  # valuename=value;warn_lower:warn_upper;crit_lower:crit_upper

  # Perfomance data and graphing documentation:
  # https://docs.checkmk.com/latest/en/graphing.html

  # The metrics + graphs (fs_used, fs_size) are defined here:
  # /opt/omd/sites/synpros/version/lib/python3/cmk/gui/plugins/metrics/fs.py

  result="P ${PN} fs_used=${disk_usage};${disk_usage_warn};${disk_usage_crit}|fs_size=${disk_quota}"
}

rc=0
timeout --kill-after=3 "${TIMEOUT}" curl --silent -H "Authorization: Bearer ${API_TOKEN}" https://api.hetzner.com/v1/storage_boxes > "${OUTPUT}" || rc=$?
# NOTE: we get exit code 124 if the curl cmdline timed out
if [[ $rc -eq 124 ]] ; then
  echo "1 ${PN} - Timeout - querying of Hetzner StorageBox API didn't finish within timeout [$TIMEOUT seconds]"
else
  parse_output
  echo "${result:-unhandled error}"
fi

rm -f "${OUTPUT}"
